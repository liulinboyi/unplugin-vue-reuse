// Vitest Snapshot v1

exports[`transform > fixtures > tests/fixtures/typescript.vue 1`] = `
"var typescript = \`<script setup lang=\\"ts\\">
import { ref } from 'vue'
const count = ref(0)
const asAny = (foo: any) => foo as any;
</script>

<!-- Right Case -->
<!-- 正确写法 -->
<!-- The real template must put the top -->
<!-- 真实的template，必须放到最前面 -->
<template>
  <div>
    <template $menu v-if=\\"true\\">
  <div class=\\"count\\" @click=\\"count++\\">
    {{ count }}
  </div>
</template>
    <div v-for=\\"n in [1,2,3]\\">
      <template $list v-if=\\"true\\">
  <div class=\\"list\\">
    {{ n }}
  </div>
</template>
    </div>
  </div>
</template>



<!-- If you write like this, although it can be run in a development environment, it does not pass type checking when packaging  -->
<!-- It is not recommended to write like this -->
<!-- 如果你这样写，尽管开发环境可以运行，但是打包时无法通过类型检查 -->
<!-- 不推荐这样写 -->


<style scoped>
.count {
  font-size: 20px;
}
.list {
  font-size: 16px;
  color: aqua;
}
</style>
\`;

export { typescript as default };
"
`;

exports[`transform > fixtures > tests/fixtures/typescript1.vue 1`] = `
"var typescript1 = \`<script setup lang=\\"ts\\">
import { ref } from 'vue'
const count = ref(0)
const asAny = (foo: any) => foo as any;
</script>

<!-- Error Case -->
<!-- 错误写法 -->
<template $menu>
  <div class=\\"count\\" @click=\\"count++\\">
    {{ count }}
  </div>
</template>

<!-- Error Case -->
<!-- 错误写法 -->
<template $list>
  <div class=\\"list\\">
    {{ n }}
  </div>
</template>

<template>
  <div>
    <container outlet=\\"menu\\" />
    <div v-for=\\"n in [1,2,3]\\">
      <container outlet=\\"list\\" />
    </div>
  </div>
</template>

<style scoped>
.count {
  font-size: 20px;
}
.list {
  font-size: 16px;
  color: aqua;
}
</style>
\`;

export { typescript1 as default };
"
`;

exports[`transform > fixtures > tests/fixtures/typescript2.vue 1`] = `
"var typescript2 = \`<script setup lang=\\"ts\\">
import { ref } from 'vue'
const count = ref(0)
const asAny = (foo: any) => foo as any;
</script>

<!-- Error Case -->
<!-- 错误写法 -->
<template $menu>
  <div class=\\"count\\" @click=\\"count++\\">
    {{ count }}
  </div>
</template>

<template>
  <div>
    <container outlet=\\"menu\\" />
    <div v-for=\\"n in [1,2,3]\\">
      <container outlet=\\"list\\" />
    </div>
  </div>
</template>

<!-- Error Case -->
<!-- 错误写法 -->
<template $list>
  <div class=\\"list\\">
    {{ n }}
  </div>
</template>



<style scoped>
.count {
  font-size: 20px;
}
.list {
  font-size: 16px;
  color: aqua;
}
</style>
\`;

export { typescript2 as default };
"
`;
